version: '2'

services:

  elasticsearch:
    image: elasticsearch:5.5.2
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - sm

  redis:
    image: redis:4.0.9-alpine
    networks:
      - sm

  rabbitmq:
    image: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: sm
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - sm

  postgres:
    image: postgres:9.5-alpine
    volumes:
      - ./postgres/initdb.d/:/docker-entrypoint-initdb.d:ro
      - ./data/pgdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: sm
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - sm

  off-sample:
    image: metaspace2020/off-sample
    ports:
      - "9876:9876"
    networks:
      - sm

  sm-api:
    build:
      context: ..
      dockerfile: docker/sm-engine/Dockerfile
      args:
        METASPACE_REPO: "$METASPACE_REPO"
        METASPACE_BRANCH: "$METASPACE_BRANCH"
    command: /sm-engine/start-api.sh
    volumes:
      - "${DATA_ROOT}:/opt/data/metaspace:z"
    networks:
      - sm
    depends_on:
      - rabbitmq
      - postgres
      - elasticsearch

  sm-update-daemon:
    build:
      context: ..
      dockerfile: docker/sm-engine/Dockerfile
      args:
        METASPACE_REPO: "$METASPACE_REPO"
        METASPACE_BRANCH: "$METASPACE_BRANCH"
    command: /sm-engine/start-update-daemon.sh
    volumes:
      - "${DATA_ROOT}:/opt/data:z"
    networks:
      - sm
    depends_on:
      - rabbitmq
      - postgres
      - elasticsearch

  sm-lithops-daemon:
    build:
      context: ..
      dockerfile: docker/sm-engine/Dockerfile
      args:
        METASPACE_REPO: "$METASPACE_REPO"
        METASPACE_BRANCH: "$METASPACE_BRANCH"
    command: /sm-engine/start-lithops-daemon.sh
    volumes:
      - "${DATA_ROOT}:/opt/data:z"
    networks:
      - sm
    depends_on:
      - rabbitmq
      - postgres
      - elasticsearch

  sm-annotate-daemon:
    build:
      context: ..
      dockerfile: docker/sm-engine/Dockerfile
      args:
        METASPACE_REPO: "$METASPACE_REPO"
        METASPACE_BRANCH: "$METASPACE_BRANCH"
    command: /sm-engine/start-annotate-daemon.sh
    mem_limit: 8g
    cpu_shares: 512
    volumes:
      - "${DATA_ROOT}:/opt/data/metaspace:z"
    environment:
      SPARK_WORKER_CORES: 4
    networks:
      - sm
    depends_on:
      - rabbitmq
      - postgres
      - elasticsearch

  sm-graphql:
    build:
      context: ./sm-graphql
      args:
        METASPACE_REPO: "$METASPACE_REPO"
        METASPACE_BRANCH: "$METASPACE_BRANCH"
    volumes:
      - "${DATA_ROOT}:/opt/data/metaspace:z"
    networks:
      - sm
    depends_on:
      - postgres
      - rabbitmq

  sm-webapp:
    build:
      context: ./sm-webapp
      args:
        METASPACE_REPO: "$METASPACE_REPO"
        METASPACE_BRANCH: "$METASPACE_BRANCH"
    volumes:
      - "${DATA_ROOT}:/opt/data/metaspace:z"
    depends_on:
      - redis
    networks:
      - sm

  nginx:
    image: nginx
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/config/proxy-params.conf:/etc/nginx/proxy-params.conf:ro
      - ./nginx/config/conf.d/:/etc/nginx/conf.d:ro
      - ./nginx/config/sites-enabled/:/etc/nginx/sites-enabled:ro
      - "${DATA_ROOT}/mol-images:/var/www/mol-images:z"
    networks:
      - sm

networks:
  sm:
    driver: bridge