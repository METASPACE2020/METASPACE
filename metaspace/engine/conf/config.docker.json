{
  "__comment__": "Copy this file to 'config.json' to use inside a docker environment",
  "bottle": {
    "host": "0.0.0.0",
    "port": 5123,
    "debug": false,
    "server": "cherrypy"
  },
  "defaults": {
    "adducts": {
      "+": ["+H", "+Na", "+K"],
      "-": ["-H", "+Cl"]
    }
  },
  "db": {
    "host": "postgres",
    "database": "sm",
    "user": "sm",
    "password": "password"
  },
  "elasticsearch": {
    "index": "sm",
    "host": "elasticsearch",
    "port": "9200",
    "user": "elastic",
    "password": "elastic"
  },
  "rabbitmq": {
    "host": "rabbitmq",
    "user": "sm",
    "password": "password"
  },
  "services": {
    "img_service_url": "http://graphql:4201",
    "img_service_public_url": " needed for lithops colocalization/ion thumbnails - use ngrok.io to make a public URL",
    "off_sample": false,
    "web_app_url": "http://localhost:8999",
    "send_email": false,
    "update_daemon_threads": 4,
    "lithops_daemon_threads": 2,
    "colocalization": false,
    "ion_thumbnail": false
  },
  "redis": {
    "host": "redis"
  },
  "fs": {
    "data_path": "/opt/data/metaspace",
    "spark_data_path": "/tmp/metaspace",
    "s3_base_path": ""
  },
  "spark": {
    "master": "local[*]",
    "spark.executor.memory": "2g",
    "spark.driver.memory": "4g",
    "spark.serializer": "org.apache.spark.serializer.KryoSerializer",
    "spark.kryoserializer.buffer.max": "128m",
    "spark.python.worker.memory": "512m",
    "spark.rdd.compress": true,
    "spark.ui.showConsoleProgress": false,
    "spark.sql.execution.arrow.enabled": true
  },
  "aws": {
    "aws_access_key_id": "",
    "aws_secret_access_key": "",
    "aws_default_region": "eu-west-1"
  },
  "slack": {
    "channel": "",
    "webhook_url": ""
  },
  "ms_file_handlers": [{
      "type": "ims",
      "extensions": ["imzml", "ibd"],
      "parser_factory": {
        "name": "ImzMLParser",
        "path": "pyimzml.ImzMLParser"
      },
      "acq_geometry_factory": {
        "name": "ImsGeometryFactory",
        "path": "sm.engine.ims_geometry_factory"
      },
      "img_storage_type": "fs"
    }, {
      "type": "lcms",
      "extensions": ["mzml"],
      "parser_factory": {
        "name": "MzMLParser",
        "path": "sm.engine.mzml_parser"
      },
      "acq_geometry_factory": {
        "name": "LcmsGeometryFactory",
        "path": "sm.engine.lcms_geometry_factory"
      },
      "img_storage_type": "fs"
  }],
  "isotope_storage": {
    "path": "/opt/data/metaspace/isotope_storage"
  },
  "logs": {
    "version": 1,
    "formatters": {
      "sm": {
        "format": "%(asctime)s - %(levelname)s - %(name)s[%(threadName)s] - %(filename)s:%(lineno)d - %(message)s"
      }
    },
    "handlers": {
        "console_debug": {
            "class": "logging.StreamHandler",
            "formatter": "sm"
        },
        "context_logger": {
          "class": "sm.engine.utils.log_capture.ContextLogHandler",
          "formatter": "sm",
          "level": "INFO"
        }
    },
    "root": {
        "handlers": ["console_debug", "context_logger"],
        "level": "INFO"
    },
    "loggers": {
        "engine": {
            "level": "DEBUG"
        },
        "engine.db": {
            "level": "INFO"
        },
        "engine.lithops-wrapper": {
            "level": "INFO"
        },
        "api": {
            "level": "INFO"
        },
        "annotate-daemon": {
            "level": "INFO"
        },
        "lithops-daemon": {
            "level": "INFO"
        },
        "update-daemon": {
            "level": "INFO"
        },
        "lithops": {
            "level": "INFO"
        }
    }
  },
  "ds_config_defaults": {
    "adducts": {
      "+": ["+H", "+Na", "+K"],
      "-": ["-H", "+Cl" ]
    }
  }
}
