/**
 * Created by intsco on 2/8/17.
 */

let config = {};

config.moldbs = {{ sm_graphql_moldbs | to_json }}

config.services = {};
/* Molecular database service, used only for internal purposes (peakChartData query) */
config.services.moldb_service_host = "{{ sm_graphql_moldb_service_host }}";
/* Internal ad-hoc service with the only endpoint /reindex/:dataset_id */
config.services.sm_engine_api_host = "localhost:5123";

config.db = {};
config.db.host = "{{ sm_graphql_database_host | default('localhost') }}";
config.db.database = "sm";
config.db.user = "sm";
config.db.password = "{{ sm_graphql_database_password }}";

config.elasticsearch = {};
config.elasticsearch.index = "sm";
config.elasticsearch.host = "localhost";
config.elasticsearch.port = 9200;

config.rabbitmq = {};
config.rabbitmq.host = "{{ sm_graphql_rabbitmq_host }}";
config.rabbitmq.user = "{{ sm_graphql_rabbitmq_user }}";
config.rabbitmq.password = "{{ sm_graphql_rabbitmq_password }}";

config.redis = {};
config.redis.host = "{{ sm_graphql_redis_host }}";
config.redis.port = "{{ sm_graphql_redis_port }}";

config.cookie = {};
config.cookie.secret = "{{ sm_graphql_cookie_secret }}";

config.google = {};
config.google.client_id = "{{ sm_graphql_google_client_id }}";
config.google.client_secret = "{{ sm_graphql_google_client_secret }}";
config.google.callback_url = "{{ sm_graphql_google_callback_url }}";

config.web_public_url = "{{ web_public_url }}";

config.slack = {};
config.slack.webhook_url = "{{ sm_graphql_slack_webhook_url }}";
config.slack.channel = "{{ sm_graphql_slack_channel }}";

config.jwt = {};
config.jwt.secret = "{{ sm_graphql_jwt_secret }}";
config.jwt.algorithm = "HS256";

config.sentry = {
  dsn: "{{ sentry_dsn }}",
};

config.aws = {
  aws_access_key_id: "{{ sm_graphql_aws_access_key_id }}",
  aws_secret_access_key: "{{ sm_graphql_aws_secret_access_key }}",
  aws_region: "{{ sm_graphql_aws_region }}"
};

config.features = {{ sm_graphql_features | to_json }};

config.metadataLookups = {{ sm_graphql_metadata_lookups | default({}) | to_json }};

module.exports = config;
