type SubmitterSearchResult {
  id: ID!
  name: String!
}

enum SortingOrder {
  ASCENDING,
  DESCENDING
}

type MolecularDatabase {
  id: Int!
  name: String!
  version: String!
  default: Boolean!
  hidden: Boolean!  # True if database is deprecated/superseded and would not be useful for most users
}

type ChemMod {
  name: String!
  chemMod: String!
}
type NeutralLoss {
  name: String!
  neutralLoss: String!
}

type Adduct {
  adduct: String!
  name: String!
  charge: Int!
  hidden: Boolean!
  default: Boolean!
}

type Query {
  metadataSuggestions(field: String!, query: String!, limit: Int = 10): [String!]!

  submitterSuggestions(query: String!): [SubmitterSearchResult!]!

  molecularDatabases(hideDeprecated: Boolean=true,
    onlyLastVersion: Boolean=true): [MolecularDatabase!]

  chemModSuggestions(query: String): [ChemMod!]!

  neutralLossSuggestions(query: String): [NeutralLoss!]!

  adductSuggestions(query: String): [Adduct!]!

  colocalizationAlgos: [ColocalizationAlgo!]!
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
